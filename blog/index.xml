<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on profile</title>
    <link>https://example.com/blog/</link>
    <description>Recent content in Blog on profile</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 May 2023 07:27:58 +0900</lastBuildDate><atom:link href="https://example.com/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EFS Burst Mode Credit Exhaustion Countermeasures Memo.</title>
      <link>https://example.com/blog/aws-efs/</link>
      <pubDate>Wed, 03 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/blog/aws-efs/</guid>
      <description>Intro EFS Burst Mode Credit Exhaustion Countermeasures Memo. I will provide the countermeasures I took as a memo since I was using EFS in burst mode and my credits were running low. Technical Elements EFS aws Two Modes of EFS EFS has two modes: Burst Mode (General Purpose) and Provisioned Mode.
Burst Mode automatically adjusts the traffic based on the amount of storage used and can handle temporary increases in traffic.</description>
    </item>
    
    <item>
      <title>Persisting an Attached EBS Volume to EC2 Using AWS CLI.</title>
      <link>https://example.com/blog/aws-ec2-ebs-delete-on-termination/</link>
      <pubDate>Wed, 03 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/blog/aws-ec2-ebs-delete-on-termination/</guid>
      <description>Intro By default, when an EC2 instance is terminated, the attached EBS volumes are also deleted. However, let&amp;rsquo;s explore how to persist them using AWS CLI. Technical Elements EC2/EBS Commands Retrieve the volume information of the target instance filtered by tags. If DeleteOnTermination is true, it means the volume is not persisted. $ aws ec2 describe-instances --filters &amp;#34;Name=tag:Name,Values=xxxxx-prod-web01&amp;#34; | jq -r .Reservations[0].Instances[0].BlockDeviceMappings [ { &amp;#34;DeviceName&amp;#34;: &amp;#34;/dev/sda1&amp;#34;, &amp;#34;Ebs&amp;#34;: { &amp;#34;AttachTime&amp;#34;: &amp;#34;2023-04-18T04:59:14+00:00&amp;#34;, &amp;#34;DeleteOnTermination&amp;#34;: true, &amp;#34;Status&amp;#34;: &amp;#34;attached&amp;#34;, &amp;#34;VolumeId&amp;#34;: &amp;#34;vol-xxxxxxxxxxxx&amp;#34; } } ] Prepare a configuration file.</description>
    </item>
    
    <item>
      <title>Deployment Memo for OIDC (Git to AWS)</title>
      <link>https://example.com/blog/cicd-oidc/</link>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/blog/cicd-oidc/</guid>
      <description>Intro Previously, when deploying from GitHub/Bitbucket to personal AWS, I used access keys and secret keys. However, it became cumbersome to manage, so I switched to OIDC.
Tasks Set up OIDC with Terraform GitHub Bitbucket Deploy using OIDC Create simple GitHub Actions and Bitbucket Pipelines Technical Elements OIDC AWS Bitbucket GitHub Terraform What is OIDC? OIDC (OpenID Connect) is an authentication protocol that extends the OAuth 2.0 protocol and provides a mechanism for user authentication in web applications and mobile applications.</description>
    </item>
    
    <item>
      <title>Lambda Local Development Environment Setup Memo (SAM | LocalStack | TypeScript)</title>
      <link>https://example.com/blog/aws-lambda-local-execution/</link>
      <pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/blog/aws-lambda-local-execution/</guid>
      <description>Intro As part of replacing my PC, I rebuilt the local execution environment for Lambda. I&amp;rsquo;ll leave some notes as a memo. Rebuilt the local execution environment for Lambda while replacing my PC. I&amp;rsquo;ll leave some notes as a memo.
Technical Elements Volta Lambda LocalStack TypeScript SAM Prerequisites Installing Volta Installing Volta Volta is a tool specialized in managing Node.js versions. It allows you to switch between different Node.js versions for each project, making it easy to manage different versions without the need to install or manage Node.</description>
    </item>
    
    <item>
      <title>I Conducted a Validation of Introducing Terragrunt, a Wrapper for Terraform.</title>
      <link>https://example.com/blog/cicd-terragrunt-1/</link>
      <pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/blog/cicd-terragrunt-1/</guid>
      <description>Intro I Conducted a Validation of Introducing Terragrunt, a Wrapper for Terraform. Introduction Validation Although I usually use Terraform, I found the following inconveniences: To minimize the impact scope of each deployment, I had to split Git repositories into smaller ones. Upgrading Terraform versions became challenging. It was difficult to understand resource dependencies from the code. There was a need to be mindful of the deployment order in areas where depends_on couldn&amp;rsquo;t be explicitly used.</description>
    </item>
    
    <item>
      <title>Creating a NAT instance on Amazon Linux 2 using Packer and Ansible.</title>
      <link>https://example.com/blog/aws-ec2-nat-instance/</link>
      <pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/blog/aws-ec2-nat-instance/</guid>
      <description>Intro I have set up a NAT instance using amazonLinux2. I utilized Packer and Ansible for the configuration process.
Set up a NAT instance using amazonLinux2. Explain why amazonLinux2 is chosen: Lambda does not support incoming connections initiated externally, so it does not support FTP in active mode. ECS does not allow for the static allocation of private IP addresses. While it is possible to achieve static allocation by combining it with NAT Private Gateway, since it is a gateway type, it cannot accept incoming connections from external sources.</description>
    </item>
    
    <item>
      <title>List</title>
      <link>https://example.com/blog/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/blog/list/</guid>
      <description>aws EFS Burst Mode Credit Exhaustion Countermeasures Memo. 2023-05-03 Persisting an Attached EBS Volume to EC2 Using AWS CLI. 2023-05-01 Lambda Local Development Environment Setup Memo (SAM | LocalStack | TypeScript). 2023-04-24 Creating a NAT instance on Amazon Linux 2 using Packer and Ansible. 2023-04-11 ci/cd I Conducted a Validation of Introducing Terragrunt, a Wrapper for Terraform. 2023-04-27 Deployment Memo for OIDC (Git to AWS). 2023-04-26 </description>
    </item>
    
  </channel>
</rss>
