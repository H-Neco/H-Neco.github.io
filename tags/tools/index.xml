<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on profile</title>
    <link>https://h-neco.github.io/tags/tools/</link>
    <description>Recent content in Tools on profile</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://h-neco.github.io/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>multipassでの仮想マシンの作成/Docker環境構築</title>
      <link>https://h-neco.github.io/blog/vm-multipass/</link>
      <pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://h-neco.github.io/blog/vm-multipass/</guid>
      <description>Intro 以前は、vagrant+virtualbox で仮想マシンを作成してましたが、m2 mac に端末を変えたため、multipass に切り替えました。
multipass は、Ubuntu の仮想マシンを簡単に作成できるツールです。multipass を使用することで、仮想マシンの作成、起動、停止、削除などの操作を簡単に行うことができます。
install $ brew install multipass ==&amp;gt; Installing Cask multipass ==&amp;gt; Running installer for multipass with sudo; the password may be necessary. Password: installer: Package name is multipass installer: Installing at base path / installer: The install was successful. 🍺 multipass was successfully installed! $ multipass version multipass 1.13.1+mac multipassd 1.13.1+mac 基本コマンド 詳しくは以下参照 https://multipass.run/docs/multipass-cli-client # 新規作成 $ multipass launch -n test-vm-01 Launched: test-vm-01 # 確認 $ multipass list Name State IPv4 Image test-vm-01 Running 192.</description>
    </item>
    
    <item>
      <title>ChatGPT&#43;Mermaidでシーケンス図を作成する</title>
      <link>https://h-neco.github.io/blog/chatgpt-mermaid/</link>
      <pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://h-neco.github.io/blog/chatgpt-mermaid/</guid>
      <description>ChatGPT+Mermaid でシーケンス図を作成する ChatGPT と Mermaid を使って、シーケンス図を作成してみました。
ChatGPT と Mermaid を組み合わせることで、シーケンス図を簡単に作成できます。ChatGPT は自然な文章生成に優れており、Mermaid はシンプルな記法でシーケンス図を描画できます。この組み合わせにより、手軽に要約や説明を行いながら、視覚的な図を生成できます。AI が生成したテキストを元に、Mermaid を使ってシーケンス図を作成することで、複雑なプロセスやアルゴリズムを視覚的に理解しやすくなります。
簡単なバッチの図を作成してみました プロンプトでの指示 「&amp;ldquo;a&amp;quot;が&amp;quot;b&amp;quot;に対して&amp;quot;x&amp;quot;を非同期で要求し、その後&amp;quot;b&amp;quot;の状態を確認し続けるというプロセスを Mermaid のシーケンス図で作成してください。状態が変更されていない場合は、&amp;ldquo;a&amp;quot;が状態確認を継続し、状態が変更された場合は、&amp;ldquo;b&amp;quot;が&amp;quot;a&amp;quot;にその旨を通知するシーケンスも図に含めてください。」
回答 あなたが求めているシーケンス図は、以下のような形になります。
mermaid sequenceDiagram participant a participant b a-&amp;gt;&amp;gt;b: xを非同期で要求 loop 状態確認 a-&amp;gt;&amp;gt;b: bの状態を確認 opt 変更なし a-&amp;gt;&amp;gt;a: 状態の確認を継続 end b--&amp;gt;&amp;gt;a: 状態変更あり end このシーケンス図は、&amp;ldquo;a&amp;quot;が&amp;quot;b&amp;quot;に非同期で&amp;quot;x&amp;quot;を要求し、その後&amp;quot;b&amp;quot;の状態を確認し続けるプロセスを表現しています。&amp;ldquo;b&amp;quot;の状態が変更されない場合、&amp;ldquo;a&amp;quot;は状態の確認を続けます。一方、&amp;ldquo;b&amp;quot;の状態が変更された場合、&amp;ldquo;b&amp;quot;は&amp;quot;a&amp;quot;にその旨を通知します。</description>
    </item>
    
    <item>
      <title>ブラウザのコンソールログをSelenium(ヘッドレスブラウザ)で取得する</title>
      <link>https://h-neco.github.io/blog/browser-selenium/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://h-neco.github.io/blog/browser-selenium/</guid>
      <description>背景 NFS から s3 へデータを移行して WEB ホスティングするように基盤移行を行った際、404 のオブジェクトが多数発生していた。 また、s3 のオブジェクト名・プレフィックス名には禁則文字というものが存在するうらしい。 何が対象なのか判断するために、ブラウザのコンソールログを取得する必要があった。
動作環境 環境・ツール
$ sw_vers ProductName: Mac OS X ProductVersion: 10.15.2 BuildVersion: 19C57 $ python3 -V Python 3.7.3z $ pip3 list | grep -e chrome -e selenium chromedriver-binary 83.0.4103.39.0 selenium 3.141.0 install 手順
$ sudo pip3 install selenium $ sudo pip3 install chromedriver-binary==83.0.4103.39.0 技術要素 selenium web driver python ec2 ファイル構成 ./log/ (ログ出力先ディレクトリ) ./config.ini (設定ファイル) ./grep.py (実行ファイル) ./url.txt (検索対象のURLリスト) 実行準備 クローリング対象の URL を記載する $ vi url.</description>
    </item>
    
  </channel>
</rss>
