<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lambda on n's tech blog</title><link>/tags/lambda/</link><description>Recent content in Lambda on n's tech blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 24 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/lambda/index.xml" rel="self" type="application/rss+xml"/><item><title>Lambdaローカル開発環境構築メモ( SAM | LocalStack | TypeScript )</title><link>/posts/lambda-local-execution/</link><pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate><guid>/posts/lambda-local-execution/</guid><description>やること # PC買い替えついでにLambdaのローカル実行環境を再構築しました。備忘として残していきます。 技術要素 # Volta Lambda LocalStack TypeScript SAM 事前準備 # Voltaのインストール # VoltaはNode.jsのバージョン管理に特化したツールで、Node.jsのバージョンを切り替える際に、プロジェクトごとに異なるバージョンを使い分けることができるという利点があります。他のバージョン管理ツールと比較しても、Node.jsのバージョンの切り替えが容易で、Node.jsのインストール方法やバージョン管理方法を意識せずに、簡単にNode.jsのバージョンを管理することができるというメリットがあります。また、VoltaはOSやシェルに依存しないため、様々な環境で利用することができます。
$ curl https://get.volta.sh | bash $ echo &amp;#39;export VOLTA_HOME=&amp;#34;$HOME/.volta&amp;#34;&amp;#39; &amp;gt;&amp;gt; .zshrc $ echo &amp;#39;export PATH=&amp;#34;$VOLTA_HOME/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; .zshrc nodeとyarnのインストール # volta list nodeで利用可能なバージョンを確認できます。バージョン指定してインストールする場合は、volta install node@18.15.0のように指定します。
$ volta install node success: installed and set node@18.15.0 (with npm@9.5.0) as default $ volta install yarn success: installed and set yarn@4.0.0-rc.42 as default SAMインストール # macOSなのでコマンドを記載しますが、WindowsOSの方は公式サイトからmisファイルをダウンロードしていくのが良さそうです。
macOS
$ brew tap aws/tap $ brew install aws-sam-cli $ sam --version SAM CLI, version 1.</description></item></channel></rss>